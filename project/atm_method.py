# -*- coding: utf-8 -*-
"""DataSci Bootcamp - ATM Method.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18qxfwDSw3bi5Zxmtm-Gnmq8oSoPgrNJT

## ATM Method

**ATM Machine should have the solution below**
- Deposit
- Withdraw
- Balance checking
- Account detail check
- Transfer Money
"""

#Defining Class

class ATM:
    def __init__(self,location,bank):
        self.location = location
        self.bank = bank

    def __str__(self):
        return f"This is a standard {self.bank} ATM machine located in {self.location}"
    #method
    #deposit money
    def deposit(self,card):
        print("current balance: ",card["balance"])
        amount = int(input("Deposit amount: "))
        card["balance"] = card["balance"] + amount

        print("current balance(after deposit): ",card["balance"])

    #withdraw money
    def withdraw(self,card):
        print("current balance: ",card["balance"])
        amount = int(input("Withdraw amount: "))
        if card["balance"] - amount >= 0:
            card["balance"] = card["balance"] - amount
            print("current balance(after withdraw): ",card["balance"])
        else:
            print("Not enough balance!!")

    #Balance checking
    def balance(self,card):
        print("Your current balance is: ",card["balance"])


    #Account detail check
    def owner(self,card):
        print(f"""Account Owner: {card['owner']}
        Card no.: {card['card no.']}
        Current Balance: {card['balance']}
        """)



    #Transfer money
    def transfer(self,card):
        destination = input("Receiver card no.: ")
        amount = int(input("Transfer amount: "))
        if card["balance"] - amount >= 0:
            card["balance"] = card["balance"] - amount
            print(f"""
            ##successfully tranferred
            From card no.: {card['card no.']}
            To card no.: {destination}
            Transfer amount: {amount}
            """)
            print("current balance(after transfer): ",card["balance"])
        else:
            print("Not enough balance!!")

card = {
    "card no.":"001",
    "owner":"Harry Potter",
    "balance":50000
}
ATM1 = ATM("Bangkok","K")

ATM1.deposit(card)

ATM1.withdraw(card)

ATM1.balance(card)

ATM1.owner(card)

ATM1.transfer(card)

